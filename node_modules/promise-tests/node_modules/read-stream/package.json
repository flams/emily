{
  "name": "read-stream",
  "version": "0.5.2",
  "description": "Base class for readable streams",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/read-stream.git"
  },
  "main": "index",
  "homepage": "https://github.com/Raynos/read-stream",
  "contributors": [
    {
      "name": "Jake Verbaten"
    }
  ],
  "bugs": {
    "url": "https://github.com/Raynos/read-stream/issues",
    "email": "raynos2@gmail.com"
  },
  "dependencies": {
    "readable-stream": "git://github.com/isaacs/readable-stream.git",
    "xtend": "~1.0.3"
  },
  "devDependencies": {},
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Raynos/read-stream/raw/master/LICENSE"
    }
  ],
  "scripts": {},
  "readme": "# read-stream\n\nBase class for readable streams\n\n## Example queue\n\n```js\nvar ReadStream = require(\"read-stream\")\n    , queue = ReadStream()\n    , count = 0\n\nvar timer = setInterval(function () {\n    count = ++count\n\n    if (count < 5) {\n        queue.push(count.toString())\n    } else {\n        clearInterval(timer)\n        queue.end()\n    }\n}, 500)\n\nqueue.stream.pipe(process.stdout)\n```\n\n## Example array\n\n```js\nvar fromArray = require(\"read-stream\").fromArray\n    , stream = fromArray([\"one\", \"two\"])\n\nstream.pipe(process.stdout)\n```\n\n## Example from\n\n```js\nvar from = require(\"read-stream/from\")\n\nvar stream = from(function (push, end) {\n    var cursor = db.cursor(...)\n\n    cursor.each(function (err, item) {\n        if (err) {\n            return end(err)\n        }\n\n        // This cursor eventually has item === null.\n        // push(null) is the same as end() so it ends the\n        // stream cleanly.\n        push(item)\n    })\n})\n\nstream.pipe(process.stdout)\n```\n\n## Example callback\n\n```js\nvar callback = require(\"read-stream/callback\")\n\nvar stream = callback(function (cb) {\n    fs.readFile(someUri, cb)\n})\n\nstream.pipe(process.stdout)\n```\n\n## Example function (old)\n\n```\nvar ReadStream = require(\"read-stream\")\n    // state is a shared object among all reads whose initial\n    // value is set to be  { count: 0 }\n    , stream = ReadStream(function read(bytes, queue) {\n        var count = ++queue.count\n\n        if (count < 5) {\n            return count.toString()\n        }\n\n        queue.end()\n    }, { count: 0 }).stream\n\nstream.pipe(process.stdout)\n```\n\n\n## Installation\n\n`npm install read-stream`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n",
  "readmeFilename": "README.md",
  "_id": "read-stream@0.5.2",
  "_from": "read-stream@*"
}
