{
  "name": "when",
  "version": "1.7.1",
  "description": "A lightweight Promise and when() implementation, plus other async goodies.",
  "keywords": [
    "promise",
    "promises",
    "deferred",
    "deferreds",
    "when",
    "async",
    "asynchronous",
    "cujo"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "repositories": [
    {
      "type": "git",
      "url": "https://github.com/cujojs/when"
    }
  ],
  "bugs": "https://github.com/cujojs/when/issues",
  "maintainers": [
    {
      "name": "Brian Cavalier",
      "url": "http://hovercraftstudios.com"
    },
    {
      "name": "John Hann",
      "url": "http://unscriptable.com"
    }
  ],
  "devDependencies": {
    "buster": "~0.6",
    "jshint": "",
    "promise-tests": "*"
  },
  "main": "when",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "jshint *.js && buster test -e node && promise-tests promises-a test/when-adapter.js",
    "test-all": "jshint *.js && buster test -e node && promise-tests all test/when-adapter.js",
    "start": "buster server",
    "test-browser": "jshint *.js && buster test -e browser"
  },
  "readme": "# when.js [![Build Status](https://secure.travis-ci.org/cujojs/when.png)](http://travis-ci.org/cujojs/when)\n\nWhen.js is cujojs's lightweight [CommonJS](http://wiki.commonjs.org/wiki/Promises) [Promises/A](http://wiki.commonjs.org/wiki/Promises/A) and `when()` implementation, derived from the async core of [wire.js](https://github.com/cujojs/wire), cujojs's IOC Container.  It also provides several other useful Promise-related concepts, such as joining multiple promises, mapping and reducing collections of promises, timed promises, and has a robust [unit test suite](#running-the-unit-tests).\n\nIt passes the [Promises/A Test Suite](https://github.com/domenic/promise-tests), is [frighteningly fast](https://github.com/cujojs/promise-perf-tests#test-results), and is **under 1.3k** when compiled with Google Closure (w/advanced optimizations) and gzipped, and has no dependencies.\n\n# What's New?\n\n### 1.7.1\n\n* Removed leftover internal usages of `deferred.then`.\n* [when/debug](https://github.com/cujojs/when/wiki/when-debug) allows configuring the set of \"fatal\" error types that will be rethrown to the host env.\n\n### 1.7.0\n\n* **DEPRECATED:** `deferred.then` [is deprecated](when/blob/master/docs/api.md#deferred) and will be removed in an upcoming release.  Use `deferred.promise.then` instead.\n* [promise.yield](when/blob/master/docs/api.md#yield)(promiseOrValue) convenience API for substituting a new value into a promise chain.\n* [promise.spread](when/blob/master/docs/api.md#spread)(variadicFunction) convenience API for spreading an array onto a fulfill handler that accepts variadic arguments. [Mmmm, buttery](http://s.shld.net/is/image/Sears/033W048977110001_20100422100331516?hei=1600&wid=1600&op_sharpen=1&resMode=sharp&op_usm=0.9,0.5,0,0)\n* Doc improvements:\n\t* [when()](when/blob/master/docs/api.md#when) and [promise.then()](when/blob/master/docs/api.md#main-promise-api) have more info about callbacks and chaining behavior.\n\t* More info and clarifications about the roles of [Deferred](when/blob/master/docs/api.md#deferred) and [Resolver](when/blob/master/docs/api.md#resolver)\n\t* Several minor clarifications for various APIs\n* Internal improvements to assimilation and interoperability with other promise implementations.\n\n### 1.6.1\n\n* Fix for accidental coercion of non-promises. See [#62](https://github.com/cujojs/when/issues/60).\n\n### 1.6.0\n\n* New [when.join](when/blob/master/docs/api.md#whenjoin) - Joins 2 or more promises together into a single promise.\n* [when.some](when/blob/master/docs/api.md#whensome) and [when.any](when/blob/master/docs/api.md#whenany) now act like competitive races, and have generally more useful behavior.  [Read the discussion in #60](https://github.com/cujojs/when/issues/60).\n* *Experimental* progress event propagation.  Progress events will propagate through promise chains. [Read the details here](when/blob/master/docs/api.md#progress-events).\n* *Temporarily* removed calls to `Object.freeze`. Promises are no longer frozen due to a horrendous v8 performance penalty.  [Read discussion here](https://groups.google.com/d/topic/cujojs/w_olYqorbsY/discussion).\n\t* **IMPORTANT:** Continue to treat promises as if they are frozen, since `freeze()` will be reintroduced once v8 performance improves.\n* [when/debug](https://github.com/cujojs/when/wiki/when-debug) now allows setting global a debugging callback for rejected promises.\n\n[Full Changelog](https://github.com/cujojs/when/wiki/Changelog)\n\n# Docs & Examples\n\n[API docs](when/blob/master/docs/api.md#api)\n\n[More info on the wiki](https://github.com/cujojs/when/wiki)\n\n[Examples](https://github.com/cujojs/when/wiki/Examples)\n\nQuick Start\n===========\n\n### AMD\n\n1. `git clone https://github.com/cujojs/when` or `git submodule add https://github.com/cujojs/when`\n1. Configure your loader with a package:\n\n\t```javascript\n\tpackages: [\n\t\t{ name: 'when', location: 'path/to/when/', main: 'when' },\n\t\t// ... other packages ...\n\t]\n\t```\n\n1. `define(['when', ...], function(when, ...) { ... });` or `require(['when', ...], function(when, ...) { ... });`\n\n### Script Tag\n\n1. `git clone https://github.com/cujojs/when` or `git submodule add https://github.com/cujojs/when`\n1. `<script src=\"path/to/when/when.js\"></script>`\n1. `when` will be available as `window.when`\n\n### Node\n\n1. `npm install when`\n1. `var when = require('when');`\n\n### RingoJS\n\n1. `ringo-admin install cujojs/when`\n1. `var when = require('when');`\n\n# Running the Unit Tests\n\n## Node\n\nNote that when.js includes @domenic's [Promises/A Test Suite](https://github.com/domenic/promise-tests).  Running unit tests in Node will run both when.js's own test suite, and the Promises/A Test Suite.\n\n1. `npm install`\n1. `npm test`\n\n## Browsers\n\n1. `npm install`\n1. `npm start` - starts buster server & prints a url\n1. Point browsers at <buster server url>/capture, e.g. `localhost:1111/capture`\n1. `npm run-script test-browser`\n\nReferences\n----------\n\nMuch of this code was inspired by @[unscriptable](https://github.com/unscriptable)'s [tiny promises](https://github.com/unscriptable/promises), the async innards of [wire.js](https://github.com/cujojs/wire), and some gists [here](https://gist.github.com/870729), [here](https://gist.github.com/892345), [here](https://gist.github.com/894356), and [here](https://gist.github.com/894360)\n\nSome of the code has been influenced by the great work in [Q](https://github.com/kriskowal/q), [Dojo's Deferred](https://github.com/dojo/dojo), and [uber.js](https://github.com/phiggins42/uber.js).\n",
  "readmeFilename": "README.md",
  "_id": "when@1.7.1",
  "_from": "when@*"
}
