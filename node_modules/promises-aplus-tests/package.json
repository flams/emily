{
  "name": "promises-aplus-tests",
  "description": "Compliance test suite for Promises/A+",
  "version": "1.0.1",
  "author": {
    "name": "Domenic Denicola",
    "email": "domenic@domenicdenicola.com",
    "url": "http://domenicdenicola.com"
  },
  "license": "WTFPL",
  "repository": {
    "type": "git",
    "url": "git://github.com/promises-aplus/promises-tests.git"
  },
  "bugs": {
    "url": "http://github.com/promises-aplus/promises-tests/issues"
  },
  "main": "lib/programmaticRunner.js",
  "bin": {
    "promises-aplus-tests": "lib/cli.js"
  },
  "directories": {
    "lib": "lib"
  },
  "scripts": {
    "lint": "jshint lib"
  },
  "dependencies": {
    "mocha": ">= 1.7.4",
    "sinon": ">= 1.5.2"
  },
  "devDependencies": {
    "jshint": ">= 0.9.1"
  },
  "readme": "<a href=\"http://promises-aplus.github.com/promises-spec\">\n    <img src=\"http://promises-aplus.github.com/promises-spec/assets/logo-small.png\"\n         align=\"right\" alt=\"Promises/A+ logo\" />\n</a>\n\n# Promises/A+ Compliance Test Suite\n\nThis suite tests compliance of a promise implementation with the [Promises/A+ specification][].\n\n[Promises/A+ specification]: https://github.com/promises-aplus/promises-spec\n\n## How To Run\n\nThe tests run in a Node.js environment; make sure you have that installed.\n\n### Adapters\n\nIn order to test your promise library, you must expose a very minimal adapter interface. These are written as Node.js\nmodules with a few well-known exports:\n\n- `fulfilled(value)`: creates a promise that is already fulfilled with `value`.\n- `rejected(reason)`: creates a promise that is already rejected with `reason`.\n- `pending()`: creates a tuple consisting of `{ promise, fulfill, reject }`:\n  - `promise` is a promise object that is currently in the pending state.\n  - `fulfill(value)` moves the promise from the pending state to a fulfilled state, with fulfillment value `value`.\n  - `reject(reason)` moves the promise from the pending state to the rejected state, with rejection reason `reason`.\n\nThe `fulfilled` and `rejected` exports are actually optional, and will be automatically created by the test runner using\n`pending` if they are not present. But, if your promise library has the capability to create already-fulfilled or\nalready-rejected promises, then you should include these exports, so that the test runner can provide you with better\ncode coverage and uncover any bugs in those methods.\n\n### From the CLI\n\nThis package comes with a command-line interface that can be used either by installing it globally with\n`npm install promises-aplus-tests -g` or by including it in your `package.json`'s `devDependencies` and using npm's\n`scripts` feature. In the latter case, your setup might look something like\n\n```json\n{\n    \"devDependencies\": {\n        \"promises-aplus-tests\": \"*\"\n    },\n    \"scripts\": {\n        \"test\": \"run-my-own-tests && promises-aplus-tests test/my-adapter\"\n    }\n}\n```\n\nThe CLI takes as its single argument the filename of your adapter file, relative to the current working directory.\n\n### Programmatically\n\nThe main export of this package is a function that allows you to run the tests against an adapter:\n\n```js\nvar promisesAplusTests = require(\"promises-aplus-tests\");\n\npromisesAplusTests(adapter, function (err) {\n    // All done; output is in the console. Or check `err` for number of failures.\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "promises-aplus-tests@1.0.1",
  "_from": "promises-aplus-tests"
}
